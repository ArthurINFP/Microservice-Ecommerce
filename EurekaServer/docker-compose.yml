services:
  eureka-server:
    image: eureka-server:latest
    container_name: eureka-server
    ports:
      - "8888:8888"
    networks:
      - app-network
    restart: always
    environment:
      - EUREKA_SERVER_PORT=8888

  postgres:
    image: postgres:latest
    container_name: micro-ecommerce-postgres
    environment:
      POSTGRES_USER: default_user
      POSTGRES_PASSWORD: default_password
      POSTGRES_DB: default_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db_init/:/docker-entrypoint-initdb.d/
    networks:
      - app-network
    restart: always

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "80:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin  # This line ensures persistence
    networks:
      - app-network
    restart: always

  product-service:
    image: product-service:latest
    container_name: product-service
    ports:
      - "8080:8080"
    depends_on:
      - eureka-server
      - postgres
      - api-gateway
    networks:
      - app-network
    restart: always

    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/product_service_db
      SPRING_DATASOURCE_USERNAME: product_service_user
      SPRING_DATASOURCE_PASSWORD: product_password
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8888/eureka/
      SPRING_PROFILES_ACTIVE: docker

  user-service:
    image: user-service:latest
    container_name: user-service
    ports:
      - "8082:8080"
    depends_on:
      - eureka-server
      - postgres
    networks:
      - app-network
    restart: always

    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/user_service_db
      SPRING_DATASOURCE_USERNAME: user_service_user
      SPRING_DATASOURCE_PASSWORD: user_password
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8888/eureka/
      SPRING_PROFILES_ACTIVE: docker

  cart-service:
    image: cart-service:latest
    container_name: cart-service
    ports:
      - "8083:8080"
    depends_on:
      - eureka-server
      - postgres
    networks:
      - app-network
    restart: always

    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/cart_service_db
      SPRING_DATASOURCE_USERNAME: cart_service_user
      SPRING_DATASOURCE_PASSWORD: cart_password
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8888/eureka/
      SPRING_PROFILES_ACTIVE: docker

  order-service:
    image: order-service:latest
    container_name: order-service
    ports:
      - "8084:8080"
    depends_on:
      - eureka-server
      - postgres
    networks:
      - app-network
    restart: always

    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/order_service_db
      SPRING_DATASOURCE_USERNAME: order_service_user
      SPRING_DATASOURCE_PASSWORD: order_password
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8888/eureka/
      SPRING_PROFILES_ACTIVE: docker

  payment-service:
    image: payment-service:latest
    container_name: payment-service
    ports:
      - "8085:8080"
    depends_on:
      - eureka-server
      - postgres
    networks:
      - app-network
    restart: always

    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/payment_service_db
      SPRING_DATASOURCE_USERNAME: payment_service_user
      SPRING_DATASOURCE_PASSWORD: payment_password
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8888/eureka/
      SPRING_PROFILES_ACTIVE: docker

  api-gateway:
    image: api-gateway:latest
    container_name: api-gateway
    ports:
      - "8081:8081"
    networks:
      - app-network
    depends_on:
      - eureka-server
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8888/eureka/
      - SPRING_PROFILES_ACTIVE=docker
    restart: always

volumes:
  pgdata:
  pgadmin_data:

networks:
  app-network:
    name: app-network
    driver: bridge
